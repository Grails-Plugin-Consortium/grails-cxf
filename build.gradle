buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "http://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.0.20'
    }
}

plugins {
    id "io.spring.dependency-management" version "0.3.1.RELEASE"
}

version "3.0.0.BUILD-SNAPSHOT"
group "grailscxf"

apply plugin: "spring-boot"
apply plugin: "war"
apply plugin: "asset-pipeline"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"
apply plugin: "maven"
apply plugin: "idea"

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs += ["src/main/java"]

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}

repositories {
  mavenLocal()
  maven { url "http://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

String cxfVersion = '3.0.4'
String jaxbVersion = '2.2.6'
String springVersion = '4.1.5.RELEASE'

dependencies {
    compile('commons-cli:commons-cli:1.2')

    compile("org.apache.cxf:cxf-tools-wsdlto-core:${cxfVersion}")

//            {
//        exclude module 'xmlbeans'
//    }
//            {
//        excludes 'xmlbeans', 'spring-web', 'spring-core', 'xml-apis', 'jaxb-impl', 'jaxb-xjc'
//    }

    compile("org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:${cxfVersion}")

    compile("org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:${cxfVersion}")

    compile("org.apache.cxf:cxf-rt-frontend-jaxws:${cxfVersion}")

    compile("org.apache.cxf:cxf-rt-frontend-jaxrs:${cxfVersion}")

    compile("com.sun.xml.bind:jaxb-impl:${jaxbVersion}")

    compile("com.sun.xml.bind:jaxb-xjc:${jaxbVersion}")

    compile("org.springframework:spring-expression:${springVersion}")

    compile("org.springframework:spring-aop:${springVersion}")

    /* Some Testing Help **************************************************/
    compile('org.apache.ws.security:wss4j:1.6.18')
//            {
//        excludes 'xmlbeans', 'spring-web', 'spring-core', 'xml-apis',
//                'junit', 'log4j', 'slf4j', 'slf4j-log4j12', 'slf4j-api', 'slf4j-jdk14'
//        export = false
//    }

    compile("org.apache.cxf:cxf-rt-ws-security:${cxfVersion}")
//            {
//        excludes 'xmlbeans', 'spring-web', 'spring-core', 'xml-apis',
//                'ehcache', 'easymock', 'ehcache-core',
//                'log4j', 'slf4j', 'slf4j-log4j12', 'slf4j-api', 'slf4j-jdk14'
//        export = false
//    }


    testCompile("org.gebish:geb-spock:0.10.0")
//            {
//        export = false
//    }

//        test("com.github.groovy-wslite:groovy-wslite:0.7.2.0") {
//            export = false
//        }

//        test("org.codehaus.geb:geb-spock:${gebVersion}") {
//            export = false
//        }

    testCompile('org.seleniumhq.selenium:selenium-htmlunit-driver:2.25.0')
//            {
//        excludes 'xmlbeans', 'spring-web', 'spring-core', 'xml-apis'
//        export = false
//    }

    testCompile('org.seleniumhq.selenium:selenium-chrome-driver:2.25.0')
//            {
//        excludes 'xmlbeans', 'spring-web', 'spring-core', 'xml-apis'
//        export = false
//    }

    testCompile('org.seleniumhq.selenium:selenium-firefox-driver:2.25.0')
//            {
//        excludes 'xmlbeans', 'spring-web', 'spring-core', 'xml-apis'
//        export = false
//    }

    compile("org.hamcrest:hamcrest-all:1.3")


 runtime "org.grails.plugins:asset-pipeline"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"

    compile "org.grails.plugins:cache"

    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"

    // Note: It is recommended to update to a more robust driver (Chrome, Firefox etc.)
    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.44.0'

    console "org.grails:grails-console"
}

//task wrapper(type: Wrapper) {
//    gradleVersion = gradleWrapperVersion
//}
